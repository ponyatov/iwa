// #![allow(unused)]

use crate::*;

use std::net::TcpStream;
use std::io::Write;

grammar(registry: &mut lib::Registry, stream: &mut TcpStream);

pub GET:() = "GET " URL " HTTP/1.1";

URL:() = {
    <req:"/"> =>
        {
        serve(stream, TEXT_HTML, INDEX_HEAD );
        stream.write(format!("<pre>\n{}\n</pre>\n","registry").as_bytes()).unwrap();
        stream.write(INDEX_TAIL).unwrap();;
        },
    "/favicon.ico" =>
        {serve(stream, IMAGE_PNG, LOGO_PNG      );},
    "/logo.png" =>
        {serve(stream, IMAGE_PNG, LOGO_PNG      );},
    "/css.css" =>
        {serve(stream, TEXT_CSS, CSS            );},
    "/manifest" =>
        {serve(stream, APP_MANIFEST, MANIFEST   );},
    "/logo_48.png" =>
        {serve(stream, IMAGE_PNG, LOGO_48       );},
    "/logo_72.png" =>
        {serve(stream, IMAGE_PNG, LOGO_72       );},
    "/logo_96.png" =>
        {serve(stream, IMAGE_PNG, LOGO_96       );},
    "/logo_128.png" =>
        {serve(stream, IMAGE_PNG, LOGO_128      );},
    "/logo_192.png" =>
        {serve(stream, IMAGE_PNG, LOGO_192      );},
    "/logo_384.png" =>
        {serve(stream, IMAGE_PNG, LOGO_384      );},
    "/logo_512.png" =>
        {serve(stream, IMAGE_PNG, LOGO_512   );},
}
